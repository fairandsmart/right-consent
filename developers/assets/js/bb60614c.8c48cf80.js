"use strict";(self.webpackChunkapi_doc=self.webpackChunkapi_doc||[]).push([[173],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),g=r,m=d["".concat(c,".").concat(g)]||d[g]||u[g]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6863:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={},i="Configuration Reference",s={unversionedId:"techdoc/config-ref",id:"techdoc/config-ref",title:"Configuration Reference",description:"Backend configuration is located in a specific file:",source:"@site/docs/04-techdoc/403-config-ref.md",sourceDirName:"04-techdoc",slug:"/techdoc/config-ref",permalink:"/developers/docs/techdoc/config-ref",draft:!1,tags:[],version:"current",sidebarPosition:403,frontMatter:{},sidebar:"docSidebar",previous:{title:"Install from Sources",permalink:"/developers/docs/techdoc/full-install-guide"},next:{title:"Connecting to the API",permalink:"/developers/docs/api/connecting"}},c={},l=[{value:"HTTP config options",id:"http-config-options",level:2},{value:"Logging config options",id:"logging-config-options",level:2},{value:"Authentication configuration",id:"authentication-configuration",level:2},{value:"Datasource configuration",id:"datasource-configuration",level:2},{value:"Outgoing SMTP Server",id:"outgoing-smtp-server",level:2},{value:"Main config options",id:"main-config-options",level:2},{value:"Support options",id:"support-options",level:2},{value:"Security",id:"security",level:2},{value:"Serial config",id:"serial-config",level:2},{value:"User page access configuration",id:"user-page-access-configuration",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration-reference"},"Configuration Reference"),(0,r.kt)("p",null,"Backend configuration is located in a specific file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ consent-manager-back/src/main/resources/application.properties\n")),(0,r.kt)("p",null,"Most of the configuration elements can be override at startup by providing a command line alternative avoiding the need to recompile the component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ java -jar -Dquarkus.http.port=9999 ...\n")),(0,r.kt)("p",null,"More tips and tricks about configuration can be found in the ",(0,r.kt)("a",{parentName:"p",href:"https://quarkus.io/docs/config#overriding-properties-at-runtime"},"quarkus documentation")),(0,r.kt)("h2",{id:"http-config-options"},"HTTP config options"),(0,r.kt)("p",null,"The first part of the file allows you to set specific HTTP server configuration options such as ports, CORS, proxy header management."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"quarkus.http.port=8087\nquarkus.http.test-port=8083\n\nquarkus.http.cors.origins=\nquarkus.http.cors.methods=OPTIONS,GET,PUT,POST,DELETE\nquarkus.http.cors.exposed-headers=Content-Disposition\nquarkus.http.cors.access-control-max-age=24H\n\nquarkus.http.proxy.proxy-address-forwarding=true\n")),(0,r.kt)("h2",{id:"logging-config-options"},"Logging config options"),(0,r.kt)("p",null,"Access logs can be generated to log all incoming REST requests on the API:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"quarkus.http.access-log.enabled=true\nquarkus.http.access-log.pattern=combined\nquarkus.http.access-log.log-to-file=true\nquarkus.http.access-log.rotate=true\n")),(0,r.kt)("h2",{id:"authentication-configuration"},"Authentication configuration"),(0,r.kt)("p",null,"Authentication is configured with two types: OpenID-Connect and HTTP BasicAuth."),(0,r.kt)("p",null,"OIDC is used for human access and delegates all account management (creation, password lost, granting roles) to an external IdP: Keycloak. This could be changed to fit other needs (LDAP, Active Directory, ...) but should be considered as a standard. Keycloak can also act as an Identity Broker by allowing to build an identity federation with the integration of other external compliant IdPs (OIDS or SAML) or other sources of accounts (LDAP, Database, etc...)."),(0,r.kt)("p",null,"HTTP BasicAuth is used for System API access only and uses specific keys that can be generated inside the application. You should NOT disable this type of authentication."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"quarkus.http.auth.basic=true\n\nquarkus.oidc.enabled=true\nquarkus.oidc.auth-server-url=http://localhost:4285/auth/realms/FairAndSmart\nquarkus.oidc.client-id=consent-manager\nquarkus.oidc.authentication.scopes=profile,email,roles\n")),(0,r.kt)("h2",{id:"datasource-configuration"},"Datasource configuration"),(0,r.kt)("p",null,"By default, the application stores all its data into an embedded database (H2) for convenience. If necessary, it is possible to change the database type. Quarkus documentation describes supported DBMS and specific ",(0,r.kt)("a",{parentName:"p",href:"https://quarkus.io/docs/datasource"},"configuration options"),". You should have to add some maven dependency in order to have the driver included in the application for such modification."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"quarkus.datasource.db-kind=h2\nquarkus.datasource.jdbc.url=jdbc:h2:${consent.home}/db\nquarkus.liquibase.migrate-at-start=false\nquarkus.liquibase.database-change-log-lock-table-name=${consent.instance}_DATABASECHANGELOGLOCK\nquarkus.liquibase.database-change-log-table-name=${consent.instance}_DATABASECHANGELOG\nquarkus.hibernate-orm.physical-naming-strategy=com.fairandsmart.consent.common.orm.PrefixPhysicalNamingStrategy\n")),(0,r.kt)("h2",{id:"outgoing-smtp-server"},"Outgoing SMTP Server"),(0,r.kt)("p",null,"An outgoing SMTP can be configured easily by overriding some of the following options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"quarkus.mailer.from=consent-manager@fairandsmart.io\nquarkus.mailer.host=localhost\nquarkus.mailer.port=25\nquarkus.mailer.start-tls=DISABLED\nquarkus.mailer.login=DISABLED\nquarkus.mailer.ssl=false\nquarkus.mailer.mock=false\n")),(0,r.kt)("h2",{id:"main-config-options"},"Main config options"),(0,r.kt)("p",null,"It is possible to set an instance name. That name allows you to have several instances running on the the same database. All tables will be prefixed using that instance name. Keep it uppercase."),(0,r.kt)("p",null,"The fixed language can be specified here and will be propagated to the frontend as the default model creation language. Once a language has been set, it is stored in the instance database and cannot be updated later without creating a new instance. Available languages are 'en' and 'fr'."),(0,r.kt)("p",null,"If the import-data option is set to true, some model samples will be imported at the start. Otherwise, the database will be kept empty. Samples models are imported at first start using the configured language."),(0,r.kt)("p",null,"The home folder config will host receipts and other files needed by the instance."),(0,r.kt)("p",null,"Public URL allows you to ensure that CORS will be correctly setup when backend runs behind a proxy."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"# MainConfig\nconsent.instance.name=DEV\nconsent.instance.owner=dev\nconsent.instance.lang=fr\nconsent.instance.import-data=true\nconsent.instance.home=~/.consent-manager\nconsent.instance.public.url=http://localhost:4287\nconsent.instance.private-url=http://localhost:8087\nconsent.instance.processor=https://www.fairandsmart.com\nconsent.instance.secret=ThisIsASuperSecret\nconsent.instance.thintoken=true\nconsent.instance.transaction-validity=PT6H\n")),(0,r.kt)("h2",{id:"support-options"},"Support options"),(0,r.kt)("p",null,"A support service is available online and allows the backend to check for the newest version periodically. For now, no data is sent to the support and only the latest version is checked. It is also possible to disable the support avoiding any communication with the central service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},'# SupportServiceConfig\nconsent.support.enabled=true\nconsent.support.news=true\nconsent.support.bugs=true\nconsent.support.stats=true\nquarkus.rest-client."com.fairandsmart.consent.support.RemoteSupportService".url=https://hub.fairandsmart.com/\nquarkus.rest-client."com.fairandsmart.consent.support.RemoteSupportService".scope=javax.inject.Singleton\n')),(0,r.kt)("h2",{id:"security"},"Security"),(0,r.kt)("p",null,"Security roles can be override using those options but in most cases, it won't be needed at all."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"# SecurityConfig\nconsent.security.auth.unauthenticated=anonymous\nconsent.security.roles.admin=admin\nconsent.security.roles.operator=operator\nconsent.security.roles.api=api\n")),(0,r.kt)("h2",{id:"serial-config"},"Serial config"),(0,r.kt)("p",null,"Serial numbers can be customized. Internal serial management is based on a slot reservation in the DB avoiding too many serialized transactions and storage bottlenecks on this critical point. Slot size can be customized in case of very heavy load of the system. Also a specific serial prefix may allow you to distinguish different instances of serials (production or tests)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"# SerialConfig\nconsent.serial.prefix=U\nconsent.serial.slot.capacity=100\nconsent.serial.slot.initial=0\n")),(0,r.kt)("h2",{id:"user-page-access-configuration"},"User page access configuration"),(0,r.kt)("p",null,"A dedicated page can be made available to your end users and the content of this page can be restricted to some models only avoiding customers to be able to see everything. The public url to access this web page can also be customized if this page is deported to another application."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="consent-manager-back/src/main/resources/application.properties"',title:'"consent-manager-back/src/main/resources/application.properties"'},"# ClientConfig\nconsent.client.user-page.enabled=false\nconsent.client.user-page.elements=processing.001,processing.002,processing.003,preference.001,preference.002,preference.003,preference.004\nconsent.client.user-page.public-url=http://localhost:4286/user/me\n")))}u.isMDXComponent=!0}}]);